{"version":3,"sources":["components/Person.js","components/Notification.js","components/Footer.js","services/people.js","App.js","index.js"],"names":["Person","person","parents","className","name","map","parent","bio","Notification","message","Footer","style","color","fontStyle","fontSize","baseUrl","request","axios","get","nonExisting","id","content","date","important","then","response","data","concat","newObject","post","App","useState","people","setPeople","newPersonName","setNewPersonName","newPersonBio","setNewPersonBio","newPersonPartner","setNewPersonPartner","newPersonParents","setNewPersonParents","newPersonChildren","setNewPersonChildren","errorMessage","useEffect","peopleRequest","initialPeople","onSubmit","event","preventDefault","children","partner","returnedPerson","value","onChange","console","log","target","type","ReactDOM","render","document","getElementById"],"mappings":"uLAkBeA,EAhBA,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACVC,EAAUD,EAAOC,SAAW,GAClC,OACE,qBAAIC,UAAU,SAAd,UACE,yCAAYF,EAAOG,QACnB,2CACGF,EAAQG,KAAI,SAAAC,GACX,OAAO,8BAAMA,UAGjB,wCAAWL,EAAOM,WCETC,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAgB,OAAZA,EACK,KAIP,qBAAKN,UAAU,QAAf,SACGM,KCQQC,EAfA,WAOb,OACE,sBAAKC,MAPa,CAClBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAIV,UACE,uBACA,qD,gBCXAC,EAAU,cA4BD,EArBA,WACb,IAAMC,EAAUC,IAAMC,IAAIH,GACpBI,EAAc,CAClBC,GAAI,IACJC,QAAS,mCACTC,KAAM,2BACNC,WAAW,GAEb,OAAOP,EAAQQ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,KAAKC,OAAOR,OAaxC,EAVA,SAAAS,GAEb,OADgBX,IAAMY,KAAKd,EAASa,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SCuG5BI,EAtHH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAE0BF,mBAAS,IAFnC,mBAETG,EAFS,KAEMC,EAFN,OAGwBJ,mBAAS,IAHjC,mBAGTK,EAHS,KAGKC,EAHL,OAIgCN,mBAAS,IAJzC,mBAITO,EAJS,KAISC,EAJT,OAKgCR,mBAAS,IALzC,mBAKTS,EALS,KAKSC,EALT,OAMkCV,mBAAS,IAN3C,mBAMTW,EANS,KAMUC,EANV,OAOwBZ,mBAAS,MAPjC,mBAOTa,EAPS,UAShBC,qBAAU,WACRC,IAEGtB,MAAK,SAAAuB,GACNd,EAAUc,QAEX,IAoEH,OACE,gCACE,gDACA,cAAC,EAAD,CAActC,QAASmC,IACvB,6BACGZ,EAAO3B,KAAI,SAAAJ,GAAM,OACd,cAAC,EAAD,CAEEA,OAAQA,GADHA,EAAOmB,SAKpB,mDACA,uBAAM4B,SA9DQ,SAACC,GACjBA,EAAMC,iBAUNJ,EARqB,CACnB1C,KAAM8B,EACN3B,IAAK6B,EACLlC,QAASsC,EACTW,SAAUT,EACVU,QAASd,IAKNd,MAAK,SAAA6B,GACNpB,EAAUD,EAAOL,OAAO0B,IA9B5BlB,EAAiB,IACjBE,EAAgB,IAChBE,EAAoB,IACpBE,EAAoB,IACpBE,EAAqB,QA0EnB,UACE,+CAEE,uBACEW,MAAOpB,EACPqB,SA7BqB,SAACN,GAC9BO,QAAQC,IAAIR,EAAMS,OAAOJ,OACzBnB,EAAiBc,EAAMS,OAAOJ,aA8B1B,kCACE,uCACA,0BACEA,MAAOlB,EACPmB,SA/BoB,SAACN,GAC7BO,QAAQC,IAAIR,EAAMS,OAAOJ,OACzBjB,EAAgBY,EAAMS,OAAOJ,aAgCzB,wBAAQK,KAAK,SAAb,qBAEF,cAAC,EAAD,Q,MCnHNC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.02043dc6.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = ({ person }) => {\n  const parents = person.parents || [];\n  return (\n    <li className='person'>\n      <div>Name: {person.name}</div>\n      <div>Parents: \n        {parents.map(parent => {\n          return <div>{parent}</div>;\n        })}\n      </div>\n      <div>Bio: {person.bio}</div>\n\n    </li>\n  )\n}\n\nexport default Person\n","import React from 'react'\n\nconst Notification = ({ message }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className=\"error\">\n      {message}\n    </div>\n  )\n}\n\nexport default Notification","import React from 'react'\n\nconst Footer = () => {\n  const footerStyle = {\n    color: 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n\n  return (\n    <div style={footerStyle}>\n      <br />\n      <em>Family Tree App</em>\n    </div>\n  )\n}\n\nexport default Footer","import axios from 'axios';\nconst baseUrl = '/api/people';\n\n// const getAll2 = () => {\n//   const request = axios.get(baseUrl)\n//   return request.then(response => response.data)\n// }\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { \n  getAll, create, update\n}","import React, { useState, useEffect } from 'react';\nimport Person from './components/Person';\nimport Notification from './components/Notification';\nimport Footer from './components/Footer';\nimport peopleRequest from './services/people';\n\nconst App = () => {\n  const [people, setPeople] = useState([]);\n  const [newPersonName, setNewPersonName] = useState('');\n  const [newPersonBio, setNewPersonBio] = useState('');\n  const [newPersonPartner, setNewPersonPartner] = useState('');\n  const [newPersonParents, setNewPersonParents] = useState([]);\n  const [newPersonChildren, setNewPersonChildren] = useState([]);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    peopleRequest\n      .getAll()\n      .then(initialPeople => {\n      setPeople(initialPeople)\n    })\n  }, []);\n\n  const resetNewPersonFields = () => {\n    setNewPersonName('');\n    setNewPersonBio('');\n    setNewPersonPartner('');\n    setNewPersonParents([]);\n    setNewPersonChildren([]);\n  };\n\n  // const newPersonParents = () => {\n  //   const parentsArray = [];\n\n  //   if (newPersonParent1) parentsArray.push(newPersonParent1);\n  //   if (newPersonParent2) parentsArray.push(newPersonParent2);\n\n  //   return parentsArray.length > 0 ? parentsArray : null;\n  // };\n\n  const addPerson = (event) => {\n    event.preventDefault();\n    \n    const personObject = {\n      name: newPersonName,\n      bio: newPersonBio,\n      parents: newPersonParents, // via dropdown list of names of people already added to DB\n      children: newPersonChildren,// via dropdown list of names of people already added to DBc\n      partner: newPersonPartner\n    }\n\n    peopleRequest\n      .create(personObject)\n        .then(returnedPerson => {\n        setPeople(people.concat(returnedPerson));\n        resetNewPersonFields();\n      })\n  }\n\n  // const toggleImportanceOf = id => {\n  //   const person = people.find(n => n.id === id)\n  //   const changedPerson = { ...person, important: !person.important }\n  \n  //   peopleRequest\n  //   .update(id, changedPerson)\n  //     .then(returnedPerson => {\n  //     setPeople(people.map(person => person.id !== id ? person : returnedPerson));\n  //   })\n  //   .catch(error => {\n  //     setErrorMessage(\n  //       `Person '${person.name}' was already removed from server`\n  //     )\n  //     setTimeout(() => {\n  //       setErrorMessage(null);\n  //     }, 5000)\n  //   });    \n  // };\n\n  const handlePersonNameChange = (event) => {\n    console.log(event.target.value);\n    setNewPersonName(event.target.value);\n  };\n\n  const handlePersonBioChange = (event) => {\n    console.log(event.target.value);\n    setNewPersonBio(event.target.value);\n  };\n\n\n  return (\n    <div>\n      <h1>Family Members</h1>\n      <Notification message={errorMessage} />  \n      <ul>\n        {people.map(person => \n            <Person\n              key={person.id}\n              person={person}\n            />\n        )}\n      </ul>\n      <h2>Add Family Member</h2>\n      <form onSubmit={addPerson}>\n        <label>\n          Full Name:\n          <input\n            value={newPersonName}\n            onChange={handlePersonNameChange}\n          />\n        </label>\n        <label>\n          <div>Bio:</div>\n          <textarea\n            value={newPersonBio}\n            onChange={handlePersonBioChange}\n          />\n         </label>\n        <button type=\"submit\">save</button>\n      </form>  \n      <Footer />\n    </div>\n  );\n};\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}